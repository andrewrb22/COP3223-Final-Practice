QUESTIONS & ANSWERS
--------------------------
1. printf("%.2f",7.0/2) ;
ANSWER: 3.50
--------------------------
2. int x =6, y=3 , z=1;
printf("%d", z+y/x+x);
ANSWER: 7 z+y = 4 -- 4/x= 1 -- 1+x=7
--------------------------
3.int x =3;
switch( x / 4){
    case 3: printf("true");
    case 4: printf("true");
    break;
    default:printf("true");
}
if(x<3) printf("true");
ANSWER = true 
--------------------------
4.int x = 3;
if(x == 3 && x <= 3) printf("TRUE") ;
else printf("FALSE");


return 0;
ANSWER = TRUE
----------------------------------
5.char x ='y';
if( x == 'Y' || x == 'y' )
printf ("Yes" ) ;
printf("No" ) ;
ANSWER = YesNo
-----------------------------------
6.int n = 0;
for(n = 2; n!=0; n--){
    printf("*");

}
if(n<0) printf("%d", n);
ANSWER = ** , THE VALUE OF N DECREASE TWICE BEFORE GETTING TO 0
---------------------------------------
7.int n = 3 , x = 10;
while (n >=1 && x <5)
{
n = n + 5;
if ( n >7 )
{
printf("%d" , n ) ;
}
break ;
}
printf("DONE" ) ;

return 0;
ANSWER = DONE
----------------------------------------------
8.int x = 1 , y = 5;
switch ( x )
{
case 5:
case 1: printf("UCF" ) ;
break ;
default :
switch ( y )
{
case 5:
case 1: printf("UCF" ) ;
break ;
default : printf("UCF" ) ;
}
}
printf("UCF" ) ;
ANSWER = UCFUCF
----------------------------------------------------
9.int n = 3;
while (n >2)
{
n = n + 1;
if ( n >7 )
{
printf("%d" , n ) ;
break ;
}
}
printf("%d" ,7);
ANSWER = 87 n hits the if statement on 8 and breaks from the while loop to printf
-----------------------------------------
10.int n = 3 , x = 10;
while (n != 3 && x >5)
{
n = n + 5;
while ( x >6 )
{
printf("%d" , n ) ;
}
}
printf("%d" , n ) ;
ANSWER = 3
----------------------------------------
11.int n = 3;
while ( n <4)
{
n = n + 5;
while ( n >= 6 )
{
printf("%d" , n ) ;
break ;
}
printf("%d" , n ) ;
}
ANSWER = 88
----------------------------------------
12. int i = 2;
if ( i > 2)
printf("one" ) ;
else
{
printf("two" ) ;
printf("three" ) ;
}
printf("four" ) ;
ANSWER = two three four
---------------------------------------
13. int counter = 0;
for ( counter = 2 ; counter <10; counter++)
{
if ( counter <5 ) continue ;
else if( counter >=6 ) break ;
printf ("Inside Loop" ) ;
counter ++;
}
printf("Outside Loop" ) ;
ANSWER = inside loopOutside loop
---------------------------------------------------
14.int x , y ;
x = 1;
y = 5;
x = y ;
y = x ;
printf ("%d and %d" , x , y ) ;
ANSWER = 5 and 5 
-----------------------------------------------
15.int a = 1 , b = 2 , *p = 0;
p = &a ;
a = 2;
p = &b ;
b = 3;
p r i n t f (”%d” , *p ) ;
ANSWER = 3
-------------------------------
16.int a = 1 , *q , *p ;
p = &a ;
a = 2;
q = p ;
*p = 0;
printf("%d" , *q ) ;
ANSWER = 0
------------------------------------
17.int fun ( ) ;
void main ()
{
p r i n t f (”%d” , 1+fun ( ) ) ;
}
int fun ()
{
int a = 2;
return a ;
}
ANSWER = 3
------------------------------
18.void fun ( int *p ) ;
void main ()
{
int x [ 1 0 0 ] = { 3 ,2 ,1} ;
fun (x ) ;
p r i n t f (”%d” , x [ 0 ] ) ;
}
void fun ( int *p)
{
*p = 1;
}
ANSWER = 1 - the value of the array x was change to 1 on the fun function, x[0] = *p = 1
--------------------------------------
19.int fun ( int p ) ;
void main ()
{
int x = 3 , y [ 1 0 ] = { 1 ,2 ,3} ;
y [ 1 ] = fun (x ) ;
p r i n t f (”%d %d” , x , y [ 1 ] ) ;
}
int fun ( int p)
{
p = 1;
return 1;
}
ANSWER = 3 1 
---------------------------------
20.void fun ( int , int *) ;
void main ()
{
int x = 3 , y = 2;
fun (x , &y ) ;
p r i n t f (”%d %d” , x , y ) ;
}
void fun ( int x , int *q)
{
x = 7;
*q = x ;
}
ANSWER = 3 7 --- &y = 2 before the function and &y = 7 after the function
--------------------------------
21.char fun ( int [ ] ) ;
void main ()
{
int x [ 2 0 ] = {1 , 0 , 2 , 3} ;
p r i n t f (”%c ” , fun (x ) ) ;
}
char fun ( int p [ ] )
{
switch ( *p )
{
case 1: return ’y ’ ;
case 2:
case 3: return ’H’ ;
default : return ’n ’ ;
}
return ’w’ ;
}
ANSWER = Y
------------------------------------
22.void fun ( ) ;
void main ()
{
int x = 1;
fun ( ) ;
printf("%d" , x ) ;
}
void fun ()
{
int x = 2;
printf("%d" , x ) ;
}
ANSWER = 21 ---- fun prints 2 and main prints 1
--------------------------------------------
23.nt main(){
int p[1] = {3},q[2]={4} ;
p[0]=1;
q[0]=2;
*p = *q ;
*q = *p ;
printf("%d  %d" , *p , *q ) ;

}
ANSWER = 2 2 
------------------------------------------
24.void func ( int , int , int ) ;
void main ()
{
int a = 1 , b = 2 , c = 4;
func (a , b , c ) ;
p r i n t f (”%d %d %d” , a , b , c ) ;
}
void func ( int x , int y , int z )
{
z = x + y ;
}
ANSWER = 1 2 4
-----------------------------------------------
25.void func ( int [ ] , int *, int ) ;
void main ()
{
int a [ 1 0 ] ={4 ,2 ,1} , b = 2 , c = 4;
func (&a [2] ,&b , a [ 0 ] ) ;
p r i n t f (”%d %d %d” , *a , b , c ) ;
}
void func ( int x [ ] , int *y , int z )
{
z = *x + *y ;
}
ANSWER = 4 2 4 
-----------------------------------
26.f l o a t A[ 1 0 ] = { 0.5 , 0.6 , 0.7 , 10.5} ;
int c ;
for ( c = 0 ; c <9 ; c++)
A[ c + 1 ] = A[ 0 ] ;
p r i n t f (”%.2 f ” , A[ 9 ] ) ;
ANSWER = 0.5
-------------------------------------------
27.int A[ 1 0 ] = { 3 ,2 ,1 ,0 ,4} ;
p r i n t f (”%d” , A[A[A[ 3 ] + 1 ] ] )
ANSWER = 1
-------------------------------------
28.
int A[ 1 0 ] = { 3 ,2 ,1 ,0 ,4} ;
int *p = &A[ 3 ] ;
p = A;
p r i n t f (”%d” , *p ) ;
ANSWER = 3
----------------------------------------
29.
typedef struct
{
int id ;
char name [ 5 0 ] ;
int crns [ 5 ] ;
} student ;
int main () {
student s1 , *p ;
p = &s1 ;
s1 . id = 333;
strcpy ( s1 . name , ”Rouicha ” ) ;
p r i n t f (”%c%d” , (*p ) . name [ 0 ] , p=>id ) ;
return 0;
}
ANSWER = R333
-----------------------------------
